// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  role      UserRole @default(USER)
  createdAt DateTime @default(now())

  // Relations
  purchases     Purchase[]
  productions   Production[]
  indirectCosts IndirectCost[]

  @@map("users")
}

model School {
  id        String   @id @default(cuid())
  name      String
  location  String
  active    Boolean  @default(true)
  createdAt DateTime @default(now())

  // Relations
  productions Production[]

  @@index([active])
  @@map("schools")
}

model Ingredient {
  id        String         @id @default(cuid())
  name      String         @unique
  unit      IngredientUnit
  category  String
  createdAt DateTime       @default(now())

  // Relations
  purchases Purchase[]

  @@index([category])
  @@map("ingredients")
}

model Purchase {
  id           String   @id @default(cuid())
  weekId       String
  ingredientId String
  purchaseDate DateTime
  quantity     Float
  unitPrice    Float
  totalPrice   Float
  createdBy    String
  createdAt    DateTime @default(now())

  // Relations
  week       Week       @relation(fields: [weekId], references: [id], onDelete: Cascade)
  ingredient Ingredient @relation(fields: [ingredientId], references: [id])
  user       User       @relation(fields: [createdBy], references: [id])

  @@index([weekId])
  @@index([ingredientId])
  @@index([purchaseDate])
  @@index([createdBy])
  @@map("purchases")
}

model Production {
  id                 String   @id @default(cuid())
  weekId             String
  schoolId           String
  productionDate     DateTime
  starchKg           Float
  vegetablesKg       Float
  totalKg            Float
  starchPortionPerKg Float
  vegPortionPerKg    Float
  beneficiaries      Int
  createdBy          String
  createdAt          DateTime @default(now())

  // Relations
  week   Week   @relation(fields: [weekId], references: [id], onDelete: Cascade)
  school School @relation(fields: [schoolId], references: [id])
  user   User   @relation(fields: [createdBy], references: [id])

  @@index([weekId])
  @@index([schoolId])
  @@index([productionDate])
  @@index([createdBy])
  @@map("productions")
}

model Week {
  id               String   @id @default(cuid())
  month            Int
  year             Int
  weekNumber       Int
  startDate        DateTime
  endDate          DateTime
  mealsServed      Int      @default(0)
  ingredientCost   Float    @default(0)
  costPerMeal      Float    @default(0)
  overheadPerMeal  Float    @default(0)
  totalCPM         Float    @default(0)
  createdAt        DateTime @default(now())

  // Relations
  purchases   Purchase[]
  productions Production[]

  @@unique([year, weekNumber])
  @@index([month, year])
  @@index([startDate, endDate])
  @@map("weeks")
}

model IndirectCost {
  id          String              @id @default(cuid())
  month       Int
  year        Int
  category    IndirectCostCategory
  description String
  amount      Float
  createdBy   String
  createdAt   DateTime            @default(now())

  // Relations
  user User @relation(fields: [createdBy], references: [id])

  @@index([month, year])
  @@index([category])
  @@index([createdBy])
  @@map("indirect_costs")
}

model MonthlySummary {
  id                  String   @id @default(cuid())
  month               Int
  year                Int
  totalIndirectCosts  Float
  totalMealsProduced  Int
  overheadPerMeal     Float
  createdAt           DateTime @default(now())

  @@unique([month, year])
  @@index([month, year])
  @@map("monthly_summaries")
}

// Enums
enum UserRole {
  ADMIN
  MANAGER
  USER
}

enum IngredientUnit {
  KG
  LTR
  PCS
}

enum IndirectCostCategory {
  SALARIES
  TRANSPORT
  UTILITIES
  MAINTENANCE
  EQUIPMENT
  ADMINISTRATION
  OTHER
}